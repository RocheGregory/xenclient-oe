diff --git a/drivers/xen/xenbus/xenbus_probe.h b/drivers/xen/xenbus/xenbus_probe.h
index c9ec7ca..95a223a 100644
--- a/drivers/xen/xenbus/xenbus_probe.h
+++ b/drivers/xen/xenbus/xenbus_probe.h
@@ -85,4 +85,11 @@ extern int xenbus_read_otherend_details(struct xenbus_device *xendev,
 
 void xenbus_ring_ops_init(void);
 
+static inline bool xenbus_dev_is_vif(const struct xenbus_device *dev)
+{
+	return (dev &&
+		(!strcmp("vif", dev->devicetype) ||
+		 !strcmp("vwif", dev->devicetype)));
+}
+
 #endif
diff --git a/drivers/xen/xenbus/xenbus_probe_backend.c b/drivers/xen/xenbus/xenbus_probe_backend.c
index 04f7f85..512e0e5 100644
--- a/drivers/xen/xenbus/xenbus_probe_backend.c
+++ b/drivers/xen/xenbus/xenbus_probe_backend.c
@@ -187,6 +187,19 @@ static void frontend_changed(struct xenbus_watch *watch,
 	xenbus_otherend_changed(watch, vec, len, 0);
 }
 
+void xenbus_dev_shutdown_backend(struct device *_dev)
+{
+	struct xenbus_device *dev = to_xenbus_device(_dev);
+
+	get_device(&dev->dev);
+	if (system_state > SYSTEM_RUNNING && !xenbus_dev_is_vif(dev))
+		DPRINTK("%s: skipping wait for frontend to close\n",
+			dev->nodename);
+	else
+		xenbus_dev_shutdown(_dev);
+	put_device(&dev->dev);
+}
+
 static struct xen_bus_type xenbus_backend = {
 	.root = "backend",
 	.levels = 3,		/* backend/type/<frontend>/<id> */
@@ -199,7 +212,7 @@ static struct xen_bus_type xenbus_backend = {
 		.uevent		= xenbus_uevent_backend,
 		.probe		= xenbus_dev_probe,
 		.remove		= xenbus_dev_remove,
-		.shutdown	= xenbus_dev_shutdown,
+		.shutdown	= xenbus_dev_shutdown_backend,
 		.dev_groups	= xenbus_dev_groups,
 	},
 };
